{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO5W5gJwdMsIT2VcYRlK3MX"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/joshuabusinge/DropboxImagesLabel/blob/main/app.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install streamlit dropbox pandas Pillow"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BmsRcqWwAMez",
        "outputId": "aebcf840-a3e6-4165-df9c-8e433f843e06"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting streamlit\n",
            "  Downloading streamlit-1.51.0-py3-none-any.whl.metadata (9.5 kB)\n",
            "Requirement already satisfied: dropbox in /usr/local/lib/python3.12/dist-packages (12.0.2)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.12/dist-packages (2.2.2)\n",
            "Requirement already satisfied: Pillow in /usr/local/lib/python3.12/dist-packages (11.3.0)\n",
            "Requirement already satisfied: altair!=5.4.0,!=5.4.1,<6,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.0)\n",
            "Requirement already satisfied: blinker<2,>=1.5.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (1.9.0)\n",
            "Requirement already satisfied: cachetools<7,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.2)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.3.0)\n",
            "Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.0.2)\n",
            "Requirement already satisfied: packaging<26,>=20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (25.0)\n",
            "Requirement already satisfied: protobuf<7,>=3.20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.29.5)\n",
            "Requirement already satisfied: pyarrow<22,>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (18.1.0)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.32.4)\n",
            "Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.5.0)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.12/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (4.15.0)\n",
            "Requirement already satisfied: watchdog<7,>=2.1.5 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.0.0)\n",
            "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.12/dist-packages (from streamlit) (3.1.45)\n",
            "Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n",
            "  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n",
            "Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.5.1)\n",
            "Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.12/dist-packages (from dropbox) (1.17.0)\n",
            "Requirement already satisfied: stone<3.3.3,>=2 in /usr/local/lib/python3.12/dist-packages (from dropbox) (3.3.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas) (2025.2)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.1.6)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (4.25.1)\n",
            "Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2.9.0)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.12/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.4.4)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.11)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2.5.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2025.10.5)\n",
            "Requirement already satisfied: ply>=3.4 in /usr/local/lib/python3.12/dist-packages (from stone<3.3.3,>=2->dropbox) (3.11)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.12/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.12/dist-packages (from jinja2->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.0.3)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (25.4.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2025.9.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.37.0)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.28.0)\n",
            "Downloading streamlit-1.51.0-py3-none-any.whl (10.2 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.2/10.2 MB\u001b[0m \u001b[31m60.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m84.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: pydeck, streamlit\n",
            "Successfully installed pydeck-0.9.1 streamlit-1.51.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import streamlit as st\n",
        "import dropbox\n",
        "import pandas as pd\n",
        "import io\n",
        "from PIL import Image\n",
        "import os\n",
        "\n",
        "# --- Configuration ---\n",
        "ACCESS_TOKEN = 'sl.u.AGFtP13phJQCOWpWTYkV_Bsihrbp0Op9Xye-EhHxRcyQnItww4DivBtHNR8SIEA_0PId0ZIJVZydMmUUxIvcjhtMjyG2x961v0IjEEksCiE8mfkzs8WnGqkQkMCAqsLHxI-HbM11osTJtAjBB_D20dcSA_j20p9YsBEuNJJrdvH6bfunX_1wtC_GD4Q5FTNh0StGBXG4tL_S2ZS2wFGg-IabhMI_dDR6Y0Rn__Xt31_aa-r5V5URS7iLiREiyHtZJHWJDUfppzAMyCz3df6NcoKKl-TnwmrpnQ9Bjil1RPMH0Hj2QDGOFBnN4rKIm3PX-ZBxXoUUXe-1ObJBKs_soPuk8-3DzyNPQvs7yhHMEwhFdFLoTeD-S8CP-2cedpwDW6dNkmG50ipyVR0UkhUu-xHRrXjy_UOYEDrmOP-6ZWMp6UwISvceUSNVQoBvoja2plCIadPiHnMSnK30erKB5PDmmtEc_SP_4gPAjEHpNs_8tGjTAOCFfB4xD4CmA1bbUw6ye09_8APaGpwkWJveb45-j4v8NGEMv89mwivrkelDLiRI8goAyTLPot6nMzIRTfbXQ9VOL3h9lWwYyqCYLeEu6yC6GDz2dOT1D68cy5qH8NfNhAU6NjofaENxXk8val18ICGh8k3L5l3JojC84e0tTym_YwVvmwvN56kCx4wlPZI5YV1O-uusb6GZFo6DV_oOX6cjSH1rbhGORcEr4TyBkpPcL49LRxZwIFGWun1VwY7TVhSxcOjLRmid5BLuvHYMtm1fz8KTZj-15AHxkot_e19DHLLMrA0-75A9jG6DeuZjHlurNKJtY_OibNm7kQhp8CFLNTNHUzOTHRdLpZ_iFTVh0t5_M4OnLBYcgKmkHmPZp6bXT7FC0P4VV9gcMCrOrvnrbHovvnJcMBTdv6R-Fenqy47GIud6aOv1wlYg5GyMrsu4DcfODD0itP4B2Gz4UQ_1MrnkInOv6NaCqwM-VHvQtDM1gqeVl_YeN5CkPAawnAdVllyHfyt7qlKq-R-O4Ldf2olXGFVuHcgc1gFHz7R4_wJSGfPAOBDKyy8XuHcas8EnaLCMxY-OGBjIyG1BB-YIVr3O8yV_IgvGvQlpSwMX1CkAX0MIjFo14tXrHgctwzpo0-QUPf0G4DO-ijmk2G7FBF7_EZ9HbdZ5e56MQkObtbNRUid4sREpVoW1-8Pm5GRBq0doedU0jE-MvM7R5Tn__j6BUQCZ4xuJ5IzbRrUmbuOOY7LEqj6c4M8xiWw97sSR_kMdjZRQCRW7mTmI2iS4puJrnDBLvcIW_1TM'\n",
        "IMAGE_FOLDER_PATH = '/Apps/MedicalImagesUltraSound'\n",
        "SCORED_DATA_FILE = 'ultrasound_scores.csv' # File to save scores in Dropbox\n",
        "SCORES = [0, 1] # Assuming a binary scoring system as implied by the form\n",
        "\n",
        "# Initialize Dropbox client\n",
        "dbx = dropbox.Dropbox(ACCESS_TOKEN)\n",
        "\n",
        "# Criteria extracted from the image\n",
        "CRITERIA = {\n",
        "    '1. Mid-sagittal section': 'Midline facial profile, fetal spine and rump all visible in one complete image. Zoom box and sample gate in center of vessel',\n",
        "    '2. Neutral position': 'Fluid visible between the chin and the chest of the fetus and the profile line',\n",
        "    '3. Horizontal orientation': 'Fetus should be horizontal with line connecting crown and rump positioned between 75° and 105° to ultrasound beam',\n",
        "    '4. Crown and rump clearly visible': 'Crown and rump should both be clearly visible',\n",
        "    '5. Correct caliper placement': 'Should be placed correctly (outer border of skin covering skull and outer border of skin covering rump)',\n",
        "    '6. Magnification': 'Fetus should fill more than two-thirds of image',\n",
        "}\n",
        "\n",
        "# --- State Management and Data Loading Functions ---\n",
        "if 'images' not in st.session_state:\n",
        "    st.session_state.images = []\n",
        "if 'current_image_index' not in st.session_state:\n",
        "    st.session_state.current_image_index = 0\n",
        "if 'scores_df' not in st.session_state:\n",
        "    st.session_state.scores_df = pd.DataFrame(columns=['Filename'] + list(CRITERIA.keys()) + ['Comments'])\n",
        "\n",
        "@st.cache_resource\n",
        "def load_images_from_dropbox():\n",
        "    \"\"\"Fetches the list of image files from the specified Dropbox folder.\"\"\"\n",
        "    try:\n",
        "        res = dbx.files_list_folder(IMAGE_FOLDER_PATH)\n",
        "        images = [\n",
        "            entry.path_display for entry in res.entries\n",
        "            if entry.path_display.lower().endswith(('.png', '.jpg', '.jpeg'))\n",
        "        ]\n",
        "        return images\n",
        "    except dropbox.exceptions.ApiError as err:\n",
        "        st.error(f\"Error accessing Dropbox: {err}\")\n",
        "        return []\n",
        "\n",
        "def get_image_bytes(path):\n",
        "    \"\"\"Downloads an image from Dropbox.\"\"\"\n",
        "    try:\n",
        "        _, res = dbx.files_download(path)\n",
        "        return res.content\n",
        "    except Exception as e:\n",
        "        st.error(f\"Error loading image: {e}\")\n",
        "        return None\n",
        "\n",
        "def save_scores(scores_dict, filename, comments):\n",
        "    \"\"\"Appends scores to the DataFrame and saves it to Dropbox as a CSV.\"\"\"\n",
        "    # Append the new data as a new row\n",
        "    new_row = {'Filename': os.path.basename(filename), 'Comments': comments}\n",
        "    new_row.update(scores_dict)\n",
        "    st.session_state.scores_df = pd.concat([st.session_state.scores_df, pd.DataFrame([new_row])], ignore_index=True)\n",
        "\n",
        "    # Save the full DataFrame to a CSV file in memory and upload to Dropbox\n",
        "    csv_buffer = io.StringIO()\n",
        "    st.session_state.scores_df.to_csv(csv_buffer, index=False)\n",
        "    dbx.files_upload(csv_buffer.getvalue().encode('utf-8'), f\"/{SCORED_DATA_FILE}\", mode=dropbox.files.WriteMode('overwrite'))\n",
        "\n",
        "\n",
        "# --- Streamlit UI ---\n",
        "st.title(\"Ultrasound Quality Scoring Tool\")\n",
        "\n",
        "# Load images on the first run\n",
        "if not st.session_state.images:\n",
        "    st.session_state.images = load_images_from_dropbox()\n",
        "    st.info(f\"Found {len(st.session_state.images)} images to score.\")\n",
        "\n",
        "if st.session_state.images:\n",
        "    current_path = st.session_state.images[st.session_state.current_image_index]\n",
        "    image_bytes = get_image_bytes(current_path)\n",
        "\n",
        "    if image_bytes:\n",
        "        img = Image.open(io.BytesIO(image_bytes))\n",
        "        st.image(img, caption=f\"Scoring image {st.session_state.current_image_index + 1}/{len(st.session_state.images)}: {os.path.basename(current_path)}\")\n",
        "\n",
        "        # Create a form for scoring\n",
        "        with st.form(\"scoring_form\"):\n",
        "            st.markdown(\"### Score Criteria\")\n",
        "            scores = {}\n",
        "            for criterion, description in CRITERIA.items():\n",
        "                col1, col2, col3 = st.columns([0.5, 3, 1])\n",
        "                with col1:\n",
        "                    st.write(criterion.split('.')[0])\n",
        "                with col2:\n",
        "                    st.markdown(f'<p style=\"font-size:14px; color:gray;\">{description}</p>', unsafe_allow_html=True)\n",
        "                with col3:\n",
        "                    scores[criterion] = st.selectbox(\"Score\", options=SCORES, key=f\"score_{criterion}\")\n",
        "\n",
        "            comments = st.text_area(\"Comments\", \"N/A\")\n",
        "\n",
        "            # Form submission buttons\n",
        "            col_btn1, col_btn2 = st.columns(2)\n",
        "            with col_btn1:\n",
        "                submit_button = st.form_submit_button(\"Save Score and Next Image\")\n",
        "            with col_btn2:\n",
        "                # Use a different key for skip button\n",
        "                skip_button = st.form_submit_button(\"Skip Image\")\n",
        "\n",
        "        if submit_button:\n",
        "            save_scores(scores, current_path, comments)\n",
        "            st.session_state.images.pop(st.session_state.current_image_index)\n",
        "            if st.session_state.current_image_index >= len(st.session_state.images):\n",
        "                st.session_state.current_image_index = 0\n",
        "            st.rerun() # Rerun to display next image and clear form\n",
        "        elif skip_button:\n",
        "            st.session_state.current_image_index += 1\n",
        "            if st.session_state.current_image_index >= len(st.session_state.images):\n",
        "                st.session_state.current_image_index = 0\n",
        "            st.rerun() # Rerun to display next image\n",
        "\n",
        "else:\n",
        "    st.write(\"All available images have been processed or labeled.\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "apnjlWsTCXlm",
        "outputId": "8f4d20a4-9212-4ba7-ba5d-c3e8977c4599"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "2025-10-30 16:59:06.760 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.761 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.763 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.766 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.767 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.770 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.771 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.772 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.774 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.774 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:06.775 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.244 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.244 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.245 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.246 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.246 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.247 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.249 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.250 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.250 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.251 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.252 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.253 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.255 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.256 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.258 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-10-30 16:59:07.258 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
          ]
        }
      ]
    }
  ]
}
